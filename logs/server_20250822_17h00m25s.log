2025-08-22 17:00:25 - root - INFO - 服务器日志系统初始化完成，日志文件: C:\Users\z0054unn\Documents\Siemens-GitLab\Third-party\third-party-clearance\logs\server_20250822_17h00m25s.log
2025-08-22 17:00:25 - uvicorn.error - INFO - Started server process [31456]
2025-08-22 17:00:25 - uvicorn.error - INFO - Waiting for application startup.
2025-08-22 17:00:25 - back_end.server - INFO - FastAPI应用启动
2025-08-22 17:00:25 - uvicorn.error - INFO - Application startup complete.
2025-08-22 17:00:33 - back_end.server - INFO - the html file is stored at: uploads\LicenseInfo-@automation-core_ac-engineering-ng-2.10.0-2025-07-30_05_57_51.html
2025-08-22 17:00:33 - nodes - INFO - Now we are parsing the original HTML File
2025-08-22 17:00:33 - nodes - INFO - Successfully parsed!
2025-08-22 17:00:33 - nodes - INFO - Now we are reviewing the components list
2025-08-22 17:00:33 - nodes - INFO - We have 3 to review
2025-08-22 17:00:46 - utils.tools - INFO - we should have result like {'LicenseName': 'Apache-2.0', 'CredentialOrNot': False}
2025-08-22 17:00:48 - nodes - INFO - We have reviewed one component
2025-08-22 17:00:59 - utils.tools - INFO - we should have result like {'LicenseName': 'CC-BY-4.0', 'CredentialOrNot': False}
2025-08-22 17:01:01 - nodes - INFO - We have reviewed one component
2025-08-22 17:01:12 - utils.tools - INFO - we should have result like {'LicenseName': '3: MIT', 'CredentialOrNot': False}
2025-08-22 17:01:13 - nodes - INFO - We have reviewed one component
2025-08-22 17:01:13 - nodes - INFO - Completely Reviewed.
2025-08-22 17:01:13 - nodes - INFO - Now we are collecing special licenses such as GPL
2025-08-22 17:01:13 - nodes - INFO - Now checking the reviewed risks
2025-08-22 17:01:13 - nodes - INFO - We have 3 licenses to check
2025-08-22 17:01:13 - nodes - INFO - Successfully combined 3 license and risk records
2025-08-22 17:01:24 - nodes - INFO - We have checked one component
2025-08-22 17:01:34 - nodes - INFO - We have checked one component
2025-08-22 17:01:44 - nodes - INFO - We have checked one component
2025-08-22 17:01:44 - nodes - INFO - finished checking, now we are checking the dependecies
2025-08-22 17:01:44 - nodes - INFO - now we start analyzing depencies between components
2025-08-22 17:01:52 - utils.tools - INFO - we should have result like {'compName': '@ngrx/store 17.2.0', 'dependency': True}
2025-08-22 17:01:52 - nodes - INFO - Now we have checked dependency of one component
2025-08-22 17:01:52 - utils.itemFilter - INFO - 开始筛选组件，共 1 个组件待处理
2025-08-22 17:01:52 - utils.itemFilter - INFO - 处理组件 1/1
2025-08-22 17:01:52 - utils.itemFilter - INFO - 正在检查组件: @ngrx/store 17.2.0
                            ⇧
2025-08-22 17:01:52 - utils.itemFilter - INFO - 组件许可证列表: ["Apache-2.0", "CC-BY-4.0", "MIT"]
2025-08-22 17:01:52 - utils.itemFilter - INFO - 风险分析中的许可证: ["Apache-2.0", "CC-BY-4.0", "MIT", "3: MIT"]
2025-08-22 17:01:52 - utils.itemFilter - INFO - 筛选完成，保留了 1 个需要凭证的组件
2025-08-22 17:01:52 - nodes - INFO - finished checking, now we are starting the chat...
2025-08-22 17:01:55 - nodes - INFO - Initialized session successfully, waiting for the bot to start conversation
2025-08-22 17:01:55 - nodes - INFO - Starting Chatting...
2025-08-22 17:01:55 - back_end.services.chat_service - INFO - we have found risk bot when initializing the chat service!
2025-08-22 17:01:55 - back_end.services.chat_manager - WARNING - now we start with checking: component
2025-08-22 17:01:58 - utils.tools - INFO - we should have result like {'result': 'continue', 'is_oem_approved': False, 'talking': 'OEM (Original Equipment Manufacturer) refers to companies that produce components or equipment that are used in products sold by another company under their own brand name. Is your project intended for OEM integration? Please answer yes or no.'}
2025-08-22 17:01:58 - back_end.server - INFO - now we initialized status as: OEMing
2025-08-22 17:02:01 - back_end.server - INFO - server: before processing input, we are in the status of: OEMing
2025-08-22 17:02:02 - utils.tools - INFO - we should have result like {'result': 'next', 'is_oem_approved': True, 'talking': 'Thank you for confirming that your project involves OEM integration. We can proceed with the next steps regarding compliance and project planning.'}
2025-08-22 17:02:02 - back_end.services.chat_service - INFO - user_input: yes

2025-08-22 17:02:02 - back_end.services.state_handlers.object_handler - WARNING - OEM handler received invalid result type: <class 'str'>
2025-08-22 17:02:02 - back_end.services.chat_flow - INFO - chat_flow.process: 处理状态: ConfirmationStatus.OEM
2025-08-22 17:02:02 - OEMStateHandler - INFO - Now we are checking...
2025-08-22 17:02:02 - back_end.services.chat_flow - INFO - chat_flow.process: 状态转移: ConfirmationStatus.OEM -> ConfirmationStatus.CONTRACT
2025-08-22 17:02:02 - back_end.services.chat_service - INFO - chat_service.process_user_input: Current status: OEMing, Updated status: toContract
2025-08-22 17:02:02 - back_end.services.chat_service - INFO - Status check - Processing type: component, Item type: ItemType.COMPONENT, Status: OEMing -> toContract
2025-08-22 17:02:02 - back_end.items_utils.item_types - WARNING - 最新状态为toContract，未找到处理类型(processing_type)，使用默认值: component
2025-08-22 17:02:04 - utils.tools - INFO - we should have result like {'result': 'continue', 'talking': 'Contracts are important legal documents that govern relationships with third-party vendors, clarifying the rights, obligations, and responsibilities of both parties. Do you have a formal contract with the vendor of this third-party component? Please answer yes or no, or explain if there are other circumstances.'}
2025-08-22 17:02:06 - back_end.server - INFO - server: before processing input, we are in the status of: toContract
2025-08-22 17:02:08 - utils.tools - INFO - we should have result like {'result': 'next', 'talking': "Thank you for your response. It's essential to have a formal contract with third-party vendors to manage compliance and mitigate risks. We can discuss the next steps regarding obtaining a contract and ensuring compliance."}
2025-08-22 17:02:08 - back_end.services.chat_service - INFO - user_input: no

2025-08-22 17:02:08 - back_end.services.chat_flow - INFO - chat_flow.process: 处理状态: ConfirmationStatus.CONTRACT
2025-08-22 17:02:08 - ContractHandler - INFO - Now we are checking...
2025-08-22 17:02:08 - back_end.services.chat_flow - INFO - chat_flow.process: 状态转移: ConfirmationStatus.CONTRACT -> ConfirmationStatus.DEPENDENCY
2025-08-22 17:02:08 - back_end.services.state_handlers.object_handler - INFO - chat_flow.DependencyCheck: 依赖处理: 初始化了 1 个组件子任务
2025-08-22 17:02:08 - back_end.services.chat_service - INFO - chat_service.process_user_input: Current status: toContract, Updated status: toDependency
2025-08-22 17:02:08 - back_end.services.chat_service - INFO - Status check - Processing type: component, Item type: ItemType.COMPONENT, Status: toContract -> toDependency
2025-08-22 17:02:10 - utils.tools - INFO - we should have result like {'result': 'continue', 'talking': 'Third-party components often have their own dependencies (libraries, frameworks, or modules they rely on), which can introduce additional compliance risks and licensing obligations. Including dependencies in the clearance ensures comprehensive risk assessment. Would you like to include the dependent components of this third-party component in your compliance clearance list? Please answer yes or no.'}
2025-08-22 17:02:12 - back_end.server - INFO - server: before processing input, we are in the status of: toDependency
2025-08-22 17:02:14 - utils.tools - INFO - we should have result like {'result': 'next', 'talking': 'Thank you for confirming that you want to include dependent components in the compliance clearance list. We can now proceed with the necessary steps to assess compliance for these dependencies.'}
2025-08-22 17:02:14 - back_end.services.chat_service - INFO - user_input: yes

2025-08-22 17:02:14 - back_end.services.chat_flow - INFO - chat_flow.process: 处理状态: ConfirmationStatus.DEPENDENCY
2025-08-22 17:02:14 - back_end.services.chat_service - INFO - chat_service.process_user_input: Current status: toDependency, Updated status: toDependency
2025-08-22 17:02:14 - back_end.services.chat_service - INFO - Status check - Processing type: component, Item type: ItemType.COMPONENT, Status: toDependency -> toDependency
2025-08-22 17:02:14 - back_end.services.chat_service - INFO - chat_service.handle_nested: now the processing type in shared is: component
2025-08-22 17:02:14 - back_end.services.chat_service - INFO - chat_service.handle_nested: now we are handling license or component ItemType.COMPONENT
2025-08-22 17:02:14 - back_end.services.chat_manager - INFO - chat_manager.handle_next: now we return back to handling continue function
2025-08-22 17:02:16 - utils.tools - INFO - we should have result like {'result': 'continue', 'talking': '@ngrx/store 17.2.0 is a third-party component that may have its own dependencies. Including these dependent components in the compliance checklist is important as they can pose additional compliance risks and licensing obligations. Would you like to add the dependent components of @ngrx/store 17.2.0 into your compliance clearance checklist? Please answer yes or no.'}
2025-08-22 17:02:16 - back_end.services.chat_service - WARNING - chat_service.handle_nested: we have found this messsage @ngrx/store 17.2.0 is a third-party component that may have its own dependencies. Including these dependent components in the compliance checklist is important as they can pose additional compliance risks and licensing obligations. Would you like to add the dependent components of @ngrx/store 17.2.0 into your compliance clearance checklist? Please answer yes or no.
2025-08-22 17:02:29 - back_end.server - INFO - server: before processing input, we are in the status of: toDependency
2025-08-22 17:02:32 - utils.tools - INFO - we should have result like {'result': 'next', 'talking': 'Thank you for confirming that you want to add the dependent components of @ngrx/store 17.2.0 to your compliance clearance checklist. We will now proceed with the compliance assessment for these dependencies.'}
2025-08-22 17:02:32 - back_end.services.chat_service - INFO - user_input: yes

2025-08-22 17:02:32 - back_end.services.chat_flow - INFO - chat_flow.process: 处理状态: ConfirmationStatus.DEPENDENCY
2025-08-22 17:02:32 - back_end.services.chat_service - INFO - chat_service.process_user_input: Current status: toDependency, Updated status: toDependency
2025-08-22 17:02:32 - back_end.services.chat_service - INFO - Status check - Processing type: component, Item type: ItemType.COMPONENT, Status: toDependency -> toDependency
2025-08-22 17:02:32 - back_end.services.chat_service - INFO - chat_service.handle_nested: now the processing type in shared is: component
2025-08-22 17:02:32 - back_end.services.chat_service - INFO - chat_service.handle_nested: now we are handling license or component ItemType.COMPONENT
2025-08-22 17:02:32 - back_end.services.chat_manager - INFO - chat_manager: updated item status to confirmed
2025-08-22 17:02:32 - back_end.services.chat_service - WARNING - chat_service.handle_nested: we have found this messsage @ngrx/store 17.2.0 has been confirmed!

We have finished current checking!
2025-08-22 17:02:32 - back_end.services.chat_service - INFO - chat_service.handle_nested: we have finished the checking for this state toDependency
2025-08-22 17:02:32 - back_end.services.chat_flow - INFO - chat_flow.process: 处理状态: ConfirmationStatus.DEPENDENCY
2025-08-22 17:02:32 - back_end.services.chat_flow - INFO - chat_flow.process: 状态转移: ConfirmationStatus.DEPENDENCY -> ConfirmationStatus.MAINLICENSE
2025-08-22 17:02:32 - back_end.services.state_handlers.object_handler - INFO - chat_flow.CredentialCheck: 依赖处理: 初始化了 1 个组件子任务
2025-08-22 17:02:32 - back_end.services.chat_service - INFO - Status check - Processing type: component, Item type: ItemType.COMPONENT, Status: toDependency -> main_license
2025-08-22 17:02:34 - utils.tools - INFO - we should have result like {'result': 'continue', 'talking': 'You are now at the stage of selecting the main license for your components. Please provide a list of components along with their respective licenses.'}
2025-08-22 17:02:34 - back_end.services.chat_service - INFO - process_status_change: we need to get the instruction for the first item: main_license
2025-08-22 17:02:35 - utils.tools - INFO - we should have result like {'result': 'continue', 'talking': "I've recorded your component licenses: ['Apache-2.0', 'CC-BY-4.0', 'MIT']. Please select which should be the main license by number or name."}
2025-08-22 17:02:40 - back_end.server - INFO - server: before processing input, we are in the status of: main_license
2025-08-22 17:02:42 - utils.tools - INFO - we should have result like {'result': 'continue', 'talking': "You've selected Apache-2.0 as the main license. Is this correct?"}
2025-08-22 17:02:42 - back_end.services.chat_service - INFO - user_input: apache

2025-08-22 17:02:42 - back_end.services.chat_flow - INFO - chat_flow.process: 处理状态: ConfirmationStatus.MAINLICENSE
2025-08-22 17:02:42 - back_end.services.chat_service - INFO - chat_service.process_user_input: Current status: main_license, Updated status: main_license
2025-08-22 17:02:42 - back_end.services.chat_service - INFO - Status check - Processing type: main_license, Item type: ItemType.MAINLICENSE, Status: main_license -> main_license
2025-08-22 17:02:42 - back_end.services.chat_service - INFO - chat_service.handle_nested: now the processing type in shared is: main_license
2025-08-22 17:02:42 - back_end.services.chat_service - INFO - chat_service.handle_nested: now we are handling license or component ItemType.MAINLICENSE
2025-08-22 17:02:42 - back_end.services.chat_service - WARNING - chat_service.handle_nested: we have found this messsage __USE_ORIGINAL_REPLY__
2025-08-22 17:02:45 - back_end.server - INFO - server: before processing input, we are in the status of: main_license
2025-08-22 17:02:47 - utils.tools - INFO - we should have result like {'result': 'next', 'talking': 'Apache-2.0 has been confirmed as the main license.'}
2025-08-22 17:02:47 - back_end.services.chat_service - INFO - user_input: yes

2025-08-22 17:02:47 - back_end.services.chat_flow - INFO - chat_flow.process: 处理状态: ConfirmationStatus.MAINLICENSE
2025-08-22 17:02:47 - back_end.services.chat_service - INFO - chat_service.process_user_input: Current status: main_license, Updated status: main_license
2025-08-22 17:02:47 - back_end.services.chat_service - INFO - Status check - Processing type: main_license, Item type: ItemType.MAINLICENSE, Status: main_license -> main_license
2025-08-22 17:02:47 - back_end.services.chat_service - INFO - chat_service.handle_nested: now the processing type in shared is: main_license
2025-08-22 17:02:47 - back_end.services.chat_service - INFO - chat_service.handle_nested: now we are handling license or component ItemType.MAINLICENSE
2025-08-22 17:02:47 - back_end.services.chat_manager - INFO - chat_manager: updated item status to confirmed
2025-08-22 17:02:47 - back_end.services.chat_service - WARNING - chat_service.handle_nested: we have found this messsage @ngrx/store 17.2.0
                            ⇧ has been confirmed!

We have finished current checking!
2025-08-22 17:02:47 - back_end.services.chat_service - INFO - chat_service.handle_nested: we have finished the checking for this state main_license
2025-08-22 17:02:47 - back_end.services.chat_flow - INFO - chat_flow.process: 处理状态: ConfirmationStatus.MAINLICENSE
2025-08-22 17:02:47 - back_end.services.chat_flow - INFO - chat_flow.process: 状态转移: ConfirmationStatus.MAINLICENSE -> ConfirmationStatus.CREDENTIAL
2025-08-22 17:02:47 - back_end.services.state_handlers.object_handler - INFO - chat_flow.CredentialCheck: 依赖处理: 初始化了 1 个组件子任务
2025-08-22 17:02:47 - back_end.services.chat_service - INFO - Status check - Processing type: main_license, Item type: ItemType.MAINLICENSE, Status: main_license -> credential
2025-08-22 17:02:50 - utils.tools - INFO - we should have result like {'result': 'continue', 'talking': 'To ensure license compliance for potential commercial components - validation prevents legal risks. Please confirm: 1) Do you have valid licenses for all commercial components in your project? 2) Are you using additional components requiring authorization? Provide status for each.'}
2025-08-22 17:02:55 - back_end.server - INFO - server: before processing input, we are in the status of: credential
2025-08-22 17:02:59 - utils.tools - INFO - we should have result like {'result': 'continue', 'talking': 'Thank you for confirming that you have valid licenses for all commercial components in your project. Now, could you please specify if you are using any additional commercial components that require authorization?'}
2025-08-22 17:02:59 - back_end.services.chat_service - INFO - user_input: yes

2025-08-22 17:02:59 - back_end.services.chat_flow - INFO - chat_flow.process: 处理状态: ConfirmationStatus.CREDENTIAL
2025-08-22 17:02:59 - back_end.services.chat_service - INFO - chat_service.process_user_input: Current status: credential, Updated status: credential
2025-08-22 17:02:59 - back_end.services.chat_service - INFO - Status check - Processing type: credential, Item type: ItemType.CREDENTIAL, Status: credential -> credential
2025-08-22 17:02:59 - back_end.services.chat_service - INFO - chat_service.handle_nested: now the processing type in shared is: credential
2025-08-22 17:02:59 - back_end.services.chat_service - INFO - chat_service.handle_nested: now we are handling license or component ItemType.CREDENTIAL
2025-08-22 17:03:03 - utils.tools - INFO - we should have result like {'result': 'continue', 'talking': "You've mentioned that @ngrx/store 17.2.0 requires credentials from another cooperation. Please confirm if you have the necessary credentials for this component."}
2025-08-22 17:03:03 - back_end.services.chat_service - WARNING - chat_service.handle_nested: we have found this messsage You've mentioned that @ngrx/store 17.2.0 requires credentials from another cooperation. Please confirm if you have the necessary credentials for this component.
2025-08-22 17:03:05 - back_end.server - INFO - server: before processing input, we are in the status of: credential
2025-08-22 17:03:11 - utils.tools - INFO - we should have result like {'result': 'next', 'talking': 'Thank you for confirming that you have the necessary credentials for @ngrx/store 17.2.0.'}
2025-08-22 17:03:11 - back_end.services.chat_service - INFO - user_input: yes

2025-08-22 17:03:11 - back_end.services.chat_flow - INFO - chat_flow.process: 处理状态: ConfirmationStatus.CREDENTIAL
2025-08-22 17:03:11 - back_end.services.chat_service - INFO - chat_service.process_user_input: Current status: credential, Updated status: credential
2025-08-22 17:03:11 - back_end.services.chat_service - INFO - Status check - Processing type: credential, Item type: ItemType.CREDENTIAL, Status: credential -> credential
2025-08-22 17:03:11 - back_end.services.chat_service - INFO - chat_service.handle_nested: now the processing type in shared is: credential
2025-08-22 17:03:11 - back_end.services.chat_service - INFO - chat_service.handle_nested: now we are handling license or component ItemType.CREDENTIAL
2025-08-22 17:03:11 - back_end.services.chat_manager - INFO - chat_manager: updated item status to confirmed
2025-08-22 17:03:11 - back_end.services.chat_service - WARNING - chat_service.handle_nested: we have found this messsage 未命名凭证 has been confirmed!

We have finished current checking!
2025-08-22 17:03:11 - back_end.services.chat_service - INFO - chat_service.handle_nested: we have finished the checking for this state credential
2025-08-22 17:03:11 - back_end.services.chat_flow - INFO - chat_flow.process: 处理状态: ConfirmationStatus.CREDENTIAL
2025-08-22 17:03:11 - back_end.services.chat_flow - INFO - chat_flow.process: 状态转移: ConfirmationStatus.CREDENTIAL -> ConfirmationStatus.SPECIAL_CHECK
2025-08-22 17:03:11 - back_end.services.state_handlers.object_handler - INFO - chat_flow.SpeicalCheck: 依赖处理: 初始化了 1 个组件子任务
2025-08-22 17:03:11 - back_end.services.chat_service - INFO - Status check - Processing type: credential, Item type: ItemType.CREDENTIAL, Status: credential -> special_check
2025-08-22 17:03:15 - utils.tools - INFO - we should have result like {'result': 'continue', 'talking': 'Now, we may need to check for any special licenses associated with components in your project. Please provide the license type and component name for which you require a special license check.'}
2025-08-22 17:03:15 - back_end.services.chat_service - INFO - process_status_change: we need to get the instruction for the first item: special_check
2025-08-22 17:03:19 - utils.tools - INFO - we should have result like {'result': 'continue', 'talking': "For your GPL-licensed component 'GPL', could you please provide details about the embedded system platform and how you have implemented address space isolation? This verification ensures compliance with GPL requirements."}
2025-08-22 17:03:22 - back_end.server - INFO - server: before processing input, we are in the status of: special_check
2025-08-22 17:03:28 - utils.tools - INFO - we should have result like {'result': 'next', 'talking': 'Thank you for providing the information regarding the embedded system platform and address space isolation implementation for your GPL-licensed component.'}
2025-08-22 17:03:28 - back_end.services.chat_service - INFO - user_input: yes

2025-08-22 17:03:28 - back_end.services.chat_flow - INFO - chat_flow.process: 处理状态: ConfirmationStatus.SPECIAL_CHECK
2025-08-22 17:03:28 - back_end.services.chat_service - INFO - chat_service.process_user_input: Current status: special_check, Updated status: special_check
2025-08-22 17:03:28 - back_end.services.chat_service - INFO - Status check - Processing type: specialcheck, Item type: ItemType.SPECIALCHECK, Status: special_check -> special_check
2025-08-22 17:03:28 - back_end.services.chat_service - INFO - chat_service.handle_nested: now the processing type in shared is: specialcheck
2025-08-22 17:03:28 - back_end.services.chat_service - INFO - chat_service.handle_nested: now we are handling license or component ItemType.SPECIALCHECK
2025-08-22 17:03:28 - back_end.services.chat_manager - INFO - chat_manager: updated item status to confirmed
2025-08-22 17:03:28 - back_end.services.chat_service - WARNING - chat_service.handle_nested: we have found this messsage GPL has been confirmed!

We have finished current checking!
2025-08-22 17:03:28 - back_end.services.chat_service - INFO - chat_service.handle_nested: we have finished the checking for this state special_check
2025-08-22 17:03:28 - back_end.services.chat_flow - INFO - chat_flow.process: 处理状态: ConfirmationStatus.SPECIAL_CHECK
2025-08-22 17:03:28 - back_end.services.chat_flow - INFO - chat_flow.process: 状态转移: ConfirmationStatus.SPECIAL_CHECK -> ConfirmationStatus.COMPLIANCE
2025-08-22 17:03:28 - back_end.services.state_handlers.object_handler - INFO - chat_flow.LicenseCheck: 依赖处理: 初始化了 3 个组件子任务
2025-08-22 17:03:28 - back_end.services.chat_service - INFO - Status check - Processing type: specialcheck, Item type: ItemType.SPECIALCHECK, Status: special_check -> toCompliance
2025-08-22 17:03:32 - utils.tools - INFO - we should have result like {'result': 'continue', 'talking': 'Welcome to the compliance verification stage! I will help you verify compliance measures for different software licenses based on their risk level. Please provide the license information in JSON format, including the license name, initial risk assessment, verified risk level, and justification for retention or removal.'}
2025-08-22 17:03:32 - back_end.services.chat_service - INFO - process_status_change: we need to get the instruction for the first item: toCompliance
2025-08-22 17:03:33 - utils.tools - INFO - we should have result like {'result': 'next', 'talking': 'For the Apache-2.0 licensed component which has a low risk level, please confirm that you have implemented the appropriate compliance measures related to the use, modification, and redistribution of the software as outlined in the license.'}
2025-08-22 17:03:40 - back_end.server - INFO - server: before processing input, we are in the status of: toCompliance
2025-08-22 17:03:45 - utils.tools - INFO - we should have result like {'result': 'next', 'talking': 'Thank you for confirming that you have implemented the appropriate compliance measures for the Apache-2.0 licensed component.'}
2025-08-22 17:03:45 - back_end.services.chat_service - INFO - user_input: yes

2025-08-22 17:03:45 - back_end.services.chat_flow - INFO - chat_flow.process: 处理状态: ConfirmationStatus.COMPLIANCE
2025-08-22 17:03:45 - back_end.services.chat_service - INFO - chat_service.process_user_input: Current status: toCompliance, Updated status: toCompliance
2025-08-22 17:03:45 - back_end.services.chat_service - INFO - Status check - Processing type: license, Item type: ItemType.LICENSE, Status: toCompliance -> toCompliance
2025-08-22 17:03:45 - back_end.services.chat_service - INFO - chat_service.handle_nested: now the processing type in shared is: license
2025-08-22 17:03:45 - back_end.services.chat_service - INFO - chat_service.handle_nested: now we are handling license or component ItemType.LICENSE
2025-08-22 17:03:45 - back_end.services.chat_manager - INFO - chat_manager: updated item status to confirmed
2025-08-22 17:03:49 - utils.tools - INFO - we should have result like {'result': 'continue', 'talking': 'For the CC-BY-4.0 licensed component assessed as medium risk, it is important to consider the potential risks involved. While the license allows for reuse and modification with proper attribution, it may lead to misuse or misinterpretation. Please confirm that you have implemented appropriate compliance measures related to attribution and are prepared for the implications of potential misuse. Additionally, if you choose to retain this license, please provide a justification for doing so.'}
2025-08-22 17:03:49 - back_end.services.chat_service - WARNING - chat_service.handle_nested: we have found this messsage Apache-2.0 has been confirmed!

For the CC-BY-4.0 licensed component assessed as medium risk, it is important to consider the potential risks involved. While the license allows for reuse and modification with proper attribution, it may lead to misuse or misinterpretation. Please confirm that you have implemented appropriate compliance measures related to attribution and are prepared for the implications of potential misuse. Additionally, if you choose to retain this license, please provide a justification for doing so.
2025-08-22 17:03:51 - back_end.server - INFO - server: before processing input, we are in the status of: toCompliance
2025-08-22 17:03:53 - utils.tools - INFO - we should have result like {'result': 'next', 'talking': 'Thank you for confirming that you have implemented appropriate compliance measures for the CC-BY-4.0 licensed component. Your acknowledgment of the medium risk and your actions taken for compliance are noted.'}
2025-08-22 17:03:53 - back_end.services.chat_service - INFO - user_input: yes

2025-08-22 17:03:53 - back_end.services.chat_flow - INFO - chat_flow.process: 处理状态: ConfirmationStatus.COMPLIANCE
2025-08-22 17:03:53 - back_end.services.chat_service - INFO - chat_service.process_user_input: Current status: toCompliance, Updated status: toCompliance
2025-08-22 17:03:53 - back_end.services.chat_service - INFO - Status check - Processing type: license, Item type: ItemType.LICENSE, Status: toCompliance -> toCompliance
2025-08-22 17:03:53 - back_end.services.chat_service - INFO - chat_service.handle_nested: now the processing type in shared is: license
2025-08-22 17:03:53 - back_end.services.chat_service - INFO - chat_service.handle_nested: now we are handling license or component ItemType.LICENSE
2025-08-22 17:03:53 - back_end.services.chat_manager - INFO - chat_manager: updated item status to confirmed
2025-08-22 17:03:54 - utils.tools - INFO - we should have result like {'result': 'next', 'talking': 'For the MIT licensed component which has a low risk level, please confirm that you have implemented the appropriate compliance measures related to retaining the copyright notice and the license text in all copies.'}
2025-08-22 17:03:54 - back_end.services.chat_service - WARNING - chat_service.handle_nested: we have found this messsage CC-BY-4.0 has been confirmed!

For the MIT licensed component which has a low risk level, please confirm that you have implemented the appropriate compliance measures related to retaining the copyright notice and the license text in all copies.
2025-08-22 17:03:56 - back_end.server - INFO - server: before processing input, we are in the status of: toCompliance
2025-08-22 17:03:58 - utils.tools - INFO - we should have result like {'result': 'next', 'talking': 'Thank you for confirming that you have implemented the appropriate compliance measures for the MIT licensed component.'}
2025-08-22 17:03:58 - back_end.services.chat_service - INFO - user_input: yes

2025-08-22 17:03:58 - back_end.services.chat_flow - INFO - chat_flow.process: 处理状态: ConfirmationStatus.COMPLIANCE
2025-08-22 17:03:58 - back_end.services.chat_service - INFO - chat_service.process_user_input: Current status: toCompliance, Updated status: toCompliance
2025-08-22 17:03:58 - back_end.services.chat_service - INFO - Status check - Processing type: license, Item type: ItemType.LICENSE, Status: toCompliance -> toCompliance
2025-08-22 17:03:58 - back_end.services.chat_service - INFO - chat_service.handle_nested: now the processing type in shared is: license
2025-08-22 17:03:58 - back_end.services.chat_service - INFO - chat_service.handle_nested: now we are handling license or component ItemType.LICENSE
2025-08-22 17:03:58 - back_end.services.chat_manager - INFO - chat_manager: updated item status to confirmed
2025-08-22 17:03:58 - back_end.services.chat_service - WARNING - chat_service.handle_nested: we have found this messsage 3: MIT⇧ has been confirmed!

We have finished current checking!
2025-08-22 17:03:58 - back_end.services.chat_service - INFO - chat_service.handle_nested: we have finished the checking for this state toCompliance
2025-08-22 17:03:58 - back_end.services.chat_flow - INFO - chat_flow.process: 处理状态: ConfirmationStatus.COMPLIANCE
2025-08-22 17:03:58 - back_end.services.chat_flow - INFO - chat_flow.process: 状态转移: ConfirmationStatus.COMPLIANCE -> ConfirmationStatus.FINALLIST
2025-08-22 17:03:58 - back_end.services.chat_service - INFO - Status check - Processing type: license, Item type: ItemType.LICENSE, Status: toCompliance -> finallist
2025-08-22 17:03:58 - back_end.items_utils.item_types - WARNING - 最新状态为finallist，未找到处理类型(processing_type)，使用默认值: component
2025-08-22 17:04:02 - back_end.server - INFO - server: before processing input, we are in the status of: finallist
2025-08-22 17:04:03 - utils.tools - INFO - we should have result like {'result': 'next', 'talking': 'Please provide the next license information for verification or let me know if you need assistance with a different aspect of compliance.'}
2025-08-22 17:04:03 - back_end.services.chat_service - INFO - user_input: next

2025-08-22 17:04:03 - back_end.services.chat_flow - INFO - chat_flow.process: 处理状态: ConfirmationStatus.FINALLIST
2025-08-22 17:04:03 - FinalListHandler - INFO - Now we are checking...
2025-08-22 17:04:03 - back_end.services.chat_flow - INFO - chat_flow.process: 状态转移: ConfirmationStatus.FINALLIST -> ConfirmationStatus.OSSGENERATION
2025-08-22 17:04:03 - back_end.services.chat_service - INFO - chat_service.process_user_input: Current status: finallist, Updated status: ossGeneration
2025-08-22 17:04:03 - back_end.services.chat_service - INFO - Status check - Processing type: component, Item type: ItemType.COMPONENT, Status: finallist -> ossGeneration
2025-08-22 17:04:03 - back_end.items_utils.item_types - WARNING - 最新状态为ossGeneration，未找到处理类型(processing_type)，使用默认值: component
2025-08-22 17:04:03 - back_end.server - INFO - All checking finished. Now we are generating the report...
2025-08-22 17:04:03 - nodes - INFO - now we are filtering items...
2025-08-22 17:04:03 - nodes - INFO - Now we are generating filtered html...
2025-08-22 17:04:03 - utils.itemFilter - INFO - Filtered component names: {'@ngrx/store'}
2025-08-22 17:04:03 - utils.itemFilter - INFO - Filtered license names: {'CC-BY-4.0', 'MIT', 'Apache-2.0'}
2025-08-22 17:04:03 - utils.itemFilter - INFO - Keeping component in release_overview: @ngrx/store
2025-08-22 17:04:03 - utils.itemFilter - INFO - Keeping component in releases: @ngrx/store
2025-08-22 17:04:03 - utils.itemFilter - INFO - Keeping license Apache-2.0 for component @ngrx/store
2025-08-22 17:04:03 - utils.itemFilter - INFO - Keeping license CC-BY-4.0 for component @ngrx/store
2025-08-22 17:04:03 - utils.itemFilter - INFO - Keeping license MIT for component @ngrx/store
2025-08-22 17:04:03 - utils.itemFilter - INFO - Keeping license in license_texts: Apache-2.0
2025-08-22 17:04:03 - utils.itemFilter - INFO - Keeping license in license_texts: CC-BY-4.0
2025-08-22 17:04:03 - utils.itemFilter - INFO - Keeping license in license_texts: MIT
2025-08-22 17:04:03 - nodes - INFO - We got the reconstructed html successfully!
2025-08-22 17:04:03 - back_end.server - ERROR - Error during chat: IO_FileNotFound_FileName, C:\Users\z0054unn\Documents\Siemens-GitLab\Third-party\third-party-clearance\reconstructedHtml.html:   at System.IO.FileInfo.get_Length() + 0x63
   at Spire.Doc.Document.spra(String, FileFormat, Boolean&) + 0x6f
   at Spire.Doc.Document.LoadFromFile(String, FileFormat, XHTMLValidationType) + 0x53
   at Spire.Doc.AOT.NLDocument.Document_LoadFromFileFFV(IntPtr, IntPtr, Int32, Int32, IntPtr) + 0x71
Traceback (most recent call last):
  File "C:\Users\z0054unn\Documents\Siemens-GitLab\Third-party\third-party-clearance\back_end\server.py", line 223, in chat
    run_report(updated_shared)
    ~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "C:\Users\z0054unn\Documents\Siemens-GitLab\Third-party\third-party-clearance\main.py", line 15, in run_report
    flow.run(shared)
    ~~~~~~~~^^^^^^^^
  File "C:\Users\z0054unn\AppData\Local\Programs\Python\Python313\Lib\site-packages\pocketflow\__init__.py", line 16, in run
    return self._run(shared)
           ~~~~~~~~~^^^^^^^^
  File "C:\Users\z0054unn\AppData\Local\Programs\Python\Python313\Lib\site-packages\pocketflow\__init__.py", line 50, in _run
    def _run(self,shared): p=self.prep(shared); o=self._orch(shared); return self.post(shared,p,o)
                                                  ~~~~~~~~~~^^^^^^^^
  File "C:\Users\z0054unn\AppData\Local\Programs\Python\Python313\Lib\site-packages\pocketflow\__init__.py", line 48, in _orch
    while curr: curr.set_params(p); last_action=curr._run(shared); curr=copy.copy(self.get_next_node(curr,last_action))
                                                ~~~~~~~~~^^^^^^^^
  File "C:\Users\z0054unn\AppData\Local\Programs\Python\Python313\Lib\site-packages\pocketflow\__init__.py", line 13, in _run
    def _run(self,shared): p=self.prep(shared); e=self._exec(p); return self.post(shared,p,e)
                                                                        ~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\z0054unn\Documents\Siemens-GitLab\Third-party\third-party-clearance\nodes.py", line 425, in post
    document.LoadFromFile('reconstructedHtml.html',FileFormat.Html, XHTMLValidationType.none)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\z0054unn\AppData\Local\Programs\Python\Python313\Lib\site-packages\plum\function.py", line 642, in __call__
    return self.f(self.instance, *args, **kw_args)
           ~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\z0054unn\AppData\Local\Programs\Python\Python313\Lib\site-packages\plum\function.py", line 592, in __call__
    return _convert(method(*args, **kw_args), return_type)
                    ~~~~~~^^^^^^^^^^^^^^^^^^
  File "C:\Users\z0054unn\AppData\Local\Programs\Python\Python313\Lib\site-packages\spire\doc\Document.py", line 2401, in LoadFromFile
    CallCFunction(GetDllLibDoc().Document_LoadFromFileFFV,self.Ptr, fileNamePtr,enumfileFormat,enumvalidationType)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\z0054unn\AppData\Local\Programs\Python\Python313\Lib\site-packages\spire\doc\common\__init__.py", line 129, in CallCFunction
    raise SpireException(info)
spire.doc.common.SpireException: IO_FileNotFound_FileName, C:\Users\z0054unn\Documents\Siemens-GitLab\Third-party\third-party-clearance\reconstructedHtml.html:   at System.IO.FileInfo.get_Length() + 0x63
   at Spire.Doc.Document.spra(String, FileFormat, Boolean&) + 0x6f
   at Spire.Doc.Document.LoadFromFile(String, FileFormat, XHTMLValidationType) + 0x53
   at Spire.Doc.AOT.NLDocument.Document_LoadFromFileFFV(IntPtr, IntPtr, Int32, Int32, IntPtr) + 0x71
2025-08-22 17:04:03 - utils.tools - ERROR - Error CHAT_ERROR: Error during contract analysis: IO_FileNotFound_FileName, C:\Users\z0054unn\Documents\Siemens-GitLab\Third-party\third-party-clearance\reconstructedHtml.html:   at System.IO.FileInfo.get_Length() + 0x63
   at Spire.Doc.Document.spra(String, FileFormat, Boolean&) + 0x6f
   at Spire.Doc.Document.LoadFromFile(String, FileFormat, XHTMLValidationType) + 0x53
   at Spire.Doc.AOT.NLDocument.Document_LoadFromFileFFV(IntPtr, IntPtr, Int32, Int32, IntPtr) + 0x71
2025-08-22 17:06:53 - uvicorn.error - INFO - Shutting down
2025-08-22 17:06:53 - uvicorn.error - INFO - Waiting for application shutdown.
2025-08-22 17:06:53 - back_end.server - INFO - FastAPI应用关闭
2025-08-22 17:06:53 - uvicorn.error - INFO - Application shutdown complete.
2025-08-22 17:06:53 - uvicorn.error - INFO - Finished server process [31456]
